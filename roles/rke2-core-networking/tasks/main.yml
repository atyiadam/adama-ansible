---
# Ensure UFW is installed and running
- name: Ensure UFW is installed
  apt:
    name: ufw
    state: present

- name: Enable UFW
  ufw:
    state: enabled
    policy: deny

# Server-specific rules
- name: Configure UFW rules for RKE2 server nodes
  ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    src: "{{ item.src }}"
  loop:
    # Kubernetes API - Accept from agent nodes
    - port: '6443'
      proto: tcp
      src: "{{ rke2_cluster_cidr }}"
    
    # Kubernetes API - Accept from trusted network
    - port: '6443'
      proto: tcp
      src: "{{ trusted_network }}"
      
    # RKE2 supervisor API - Accept from agent nodes
    - port: '9345'
      proto: tcp
      src: "{{ rke2_cluster_cidr }}"
    
    # etcd client port - Accept from server nodes only
    - port: '2379'
      proto: tcp
      src: "{{ rke2_server_cidr }}"
    
    # etcd peer port - Accept from server nodes only
    - port: '2380'
      proto: tcp
      src: "{{ rke2_server_cidr }}"
    
    # etcd metrics port - Accept from server nodes only
    - port: '2381'
      proto: tcp
      src: "{{ rke2_server_cidr }}"
  when: rke2_type == 'server'
  notify: reload ufw

# Common rules for both server and agent nodes
- name: Configure UFW common rules for all RKE2 nodes
  ufw:
    rule: allow
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    src: "{{ item.src }}"
  loop:
    # kubelet metrics - Accept from all RKE2 nodes
    - port: '10250'
      proto: tcp
      src: "{{ rke2_cluster_cidr }}"
  notify: reload ufw

# NodePort range requires special handling in UFW
- name: Configure NodePort range for all RKE2 nodes
  ufw:
    rule: allow
    port: "30000:32767"
    proto: tcp
    src: "{{ rke2_cluster_cidr }}"
  notify: reload ufw

# Allow HAProxy to access NodePorts
- name: Configure NodePort range for HAProxy
  ufw:
    rule: allow
    port: "30000:32767"
    proto: tcp
    src: "{{ loadbalancer_ip }}"
  notify: reload ufw

- name: Configure NodePort range for UDP traffic
  ufw:
    rule: allow
    port: "30000:32767"
    proto: udp
    src: "{{ loadbalancer_ip }}"
  notify: reload ufw
  
