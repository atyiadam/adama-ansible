global
    chroot /var/lib/haproxy
    user haproxy
    group haproxy
    log /dev/log local0
    daemon
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    tune.ssl.default-dh-param 2048
    maxconn 50000
    stats socket /var/run/haproxy/admin.sock user haproxy group haproxy mode 660

defaults
    log global
    mode http
    option httplog
    timeout client 10s
    timeout connect 30s
    timeout server 30s

frontend http_in
    bind *:443 ssl crt {{ combined_cert }} 
    bind *:80

    # Force HTTPS
    redirect scheme https code 301 if !{ ssl_fc }

# Add security headers
    http-response set-header Strict-Transport-Security "max-age=63072000"
    http-response set-header X-Frame-Options "DENY"
    http-response set-header X-Content-Type-Options "nosniff"

{% if haproxy_https_backends is defined and haproxy_https_backends %}
{% for backend in haproxy_https_backends %}
    acl host_{{ backend.name }} hdr(host) -i {{ backend.domain }}
    use_backend {{ backend.name }} if host_{{ backend.name }}
{% endfor %}
{% endif %}

{% if haproxy_http_backends is defined and haproxy_http_backends %}
{% for backend in haproxy_http_backends %}
    acl host_{{ backend.name }} hdr(host) -i {{ backend.domain }}
    use_backend {{ backend.name }} if host_{{ backend.name }}
{% endfor %}
{% endif %}

    default_backend no-match

{% if haproxy_https_backends is defined and haproxy_https_backends %}
{% for backend in haproxy_https_backends %}
backend {{ backend.name }}
{% for server in backend.servers %}
    server {{ server.name }} {{ server.address }}:{{ server.port }} ssl verify none
{% endfor %}
{% endfor %}
{% endif %}

{% if haproxy_http_backends is defined and haproxy_http_backends %}
{% for backend in haproxy_http_backends %}
backend {{ backend.name }}
{% for server in backend.servers %}
    server {{ server.name }} {{ server.address }}:{{ server.port }}
{% endfor %}
{% endfor %}
{% endif %}

backend no-match
  mode http
  http-request deny deny_status 400
